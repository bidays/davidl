<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>davidl • design &amp; développement</title>
  <subtitle>Je crée des sites internet qui fonctionnent à merveille sur n’importe quel appareil. Designer spécialisé HTML et CSS basé à Lille</subtitle>
  <id>http://davidl.fr/blog/</id>
  <link href="http://davidl.fr/blog/"/>
  <link href="http://davidl.fr/blog/feed.xml" rel="self"/>
  <updated>2016-06-14T00:00:00+02:00</updated>
  <author>
    <name>David Leuliette</name>
  </author>
  <entry>
    <title>Comment passer sa certification Digital Marketing par Google</title>
    <link rel="alternate" href="http://davidl.fr/blog/certification-google.html"/>
    <id>http://davidl.fr/blog/certification-google.html</id>
    <published>2016-06-14T00:00:00+02:00</published>
    <updated>2016-07-01T12:57:22+02:00</updated>
    <author>
      <name>davidl • design &amp; développement</name>
    </author>
    <content type="html">&lt;p&gt;En travaillant dans l’industrie du web depuis longtemps, j’ai eu la chance — ou le malheur — d’aller dans diverses structures plus ou moins importantes. Au travers des années j’ai résolu les problèmatiques d’un bon nombre de personnes qui étaient très compétente — ou complètement à la ramasse — dans l’industrie du web.
La bonne nouvelle est qu’au XXIième il est très facile d’&lt;strong&gt;aquérir de nouvelles compétences&lt;/strong&gt; si l’on est un peu curieux.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Construire des ponts entre le marketing &amp;amp; les développeurs&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Souvent les développeurs ne comprennent pas les demandes du marketing &amp;amp; inversement. Parce que oui mettre “juste” un bouton en production ne prends pas toujours 5 minutes. C’est pour cela que j’ai décidé de passer ma certification afin de mieux comprendre le monde des personnes travaillant dans le marketing digital, parler le même language et faire un peu de &lt;a href="https://www.linkedin.com/in/david-leuliette-456701121"&gt;Growth Hacking sur LinkedIn&lt;/a&gt;. Cela me permettra aussi de mieux conseiller les chefs de produits, responsables &amp;amp; assistants marketing qui — contrairement à moi — ne vivent pas encore dans le futur.&lt;/p&gt;

&lt;h2 id="tout-un-programme"&gt;Tout un programme&lt;/h2&gt;

&lt;p&gt;La certification “Digital Active by Google” est une formation gratuite, en ligne &amp;amp; disponible dans certaines universités partenaires. À la clef, un &lt;strong&gt;certificat reconnu&lt;/strong&gt; par l’&lt;a href="https://fr.wikipedia.org/wiki/Interactive_Advertising_Bureau"&gt;IAB Europe&lt;/a&gt; et des &lt;strong&gt;compétences numériques&lt;/strong&gt; que vous pourrez faire valoir dans le monde professionnel.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Une formation totalement gratuite&lt;/li&gt;
  &lt;li&gt;Apprenez avec des experts travaillant avec les technologies de Google&lt;/li&gt;
  &lt;li&gt;Testez vos connaissances&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Si vous avez un compte gmail tout est disponible à cette url &lt;a href="https://digitalactive.withgoogle.com"&gt;https://digitalactive.withgoogle.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt="Badges certification digital active par google" src="https://c2.staticflickr.com/8/7438/28015063095_9eecf4cd4f_b.jpg" /&gt;&lt;/p&gt;

&lt;h3 id="badges"&gt;Badges&lt;/h3&gt;

&lt;p&gt;Les 90 cours vidéos abordent différents thèmes comme :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Développer une présence en ligne&lt;/li&gt;
  &lt;li&gt;La communication par e-mail&lt;/li&gt;
  &lt;li&gt;Le mobile et ses possibilités&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Quand la formation est validée, vous obtenez un super &lt;code&gt;.pdf&lt;/code&gt; à imprimmer pour l’accorcher dans votre salon. Vous pouvez aussi l’ajouter — dans mon cas — à votre &lt;a href="http://davidl.fr/cv.html"&gt;CV de développeur front-end&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Diplome Marketing de David Leuliette" src="https://c2.staticflickr.com/8/7338/27913306722_8bab30348d_z.jpg" /&gt;&lt;/p&gt;

&lt;h2 id="comment-russir-sa-certification-"&gt;Comment réussir sa certification ?&lt;/h2&gt;

&lt;p&gt;&lt;img alt="Citation sur la productivité par David Leuliette" src="https://c2.staticflickr.com/8/7369/27913002322_cd6a92e1e2_b.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;Mon principal conseil est l’assiduité. Suivez simplement les vidéos et soyez logique. Souvent les réponses tiennent du bon sens si l’on connait le vocabulaire comme SEO, SEM, les réseaux sociaux… J’ai obtenu ma certification en environ 1 mois, à raison de 3 cours par jour.
&lt;strong&gt;C’est tout&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Vous êtes maintenant certifié digital active&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Note pour les personnes parlant français&lt;/strong&gt; :
Selon la &lt;a href="https://fr.wikipedia.org/wiki/Digital"&gt;définition de wikipedia&lt;/a&gt;, le mot digital est l’adjectif associé au substantif doigt (Tracé digital, Empreinte digitale, …). Donc les personnes expertes en digital sont … (troll)&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>GitShot — timelapse vidéo de chaque commit</title>
    <link rel="alternate" href="http://davidl.fr/blog/gitshot.html"/>
    <id>http://davidl.fr/blog/gitshot.html</id>
    <published>2016-05-04T00:00:00+02:00</published>
    <updated>2016-05-17T10:46:37+02:00</updated>
    <author>
      <name>davidl • design &amp; développement</name>
    </author>
    <content type="html">&lt;p&gt;Ceux qui me connaissent savent que j’adore tracker un tas de trucs dans ma vie. J’utilise &lt;a href="https://www.evernote.com/referral/Registration.action?sig=20b14c77343018bd4f93762fc9fae90d&amp;amp;uid=22499360"&gt;evernote&lt;/a&gt; pour mes recettes de cuisine &amp;amp; mes sides projects, Foursquare pour les km parcourus, &lt;a href="http://www.codeivate.com/users/flexbox"&gt;codeivate&lt;/a&gt; pour mes heures de code.&lt;/p&gt;

&lt;p&gt;Ajourd’hui je vous propose quelque chose de bien plus fun : &lt;strong&gt;prendre une photo avec votre webcam à chaque commit&lt;/strong&gt; !&lt;/p&gt;

&lt;iframe width="640" height="360" src="https://www.youtube.com/embed/bU6_9RK7HR0" frameborder="0" allowfullscreen=""&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;em&gt;J’ai testé ce hack seulement sur macOS. Si quelqu’un a essayé sur Linux &lt;a href="http://twitter.com/_flexbox"&gt;je veux bien un tweet à ce sujet&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id="hacker-votre-webcam"&gt;Hacker votre webcam&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://www.iharder.net/current/macosx/imagesnap/"&gt;ImageSnap&lt;/a&gt; est un logiciel en ligne de commande qui permet de capturer une image depuis votre webcam. Sur macOS vous pourvez l’installer via &lt;a href="https://github.com/Homebrew/homebrew-bundle"&gt;brew&lt;/a&gt; :&lt;/p&gt;

&lt;pre class="highlight shell"&gt;&lt;code&gt;  &lt;span class="nv"&gt;$ &lt;/span&gt;brew install imagesnap
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Une fois téléchargé, vous pouvez utiliser la commande &lt;code&gt;imagesnap&lt;/code&gt; pour capturer une image.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Gitshot CLI" src="https://c2.staticflickr.com/8/7212/26964984922_8730424a83_b.jpg" /&gt;&lt;/p&gt;

&lt;h2 id="ajouter-un-git-hook"&gt;Ajouter un Git Hook&lt;/h2&gt;

&lt;p&gt;Créez 2 dossiers &lt;code&gt;.gitshots&lt;/code&gt; et &lt;code&gt;.git-templates&lt;/code&gt; dans votre dossier utilisateur.&lt;/p&gt;

&lt;pre class="highlight shell"&gt;&lt;code&gt;  &lt;span class="nv"&gt;$ &lt;/span&gt;mkdir ~/.gitshots ~/.git-templates
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ajoutez ces 2 lignes dans votre fichier &lt;code&gt;.gitconfig&lt;/code&gt;&lt;/p&gt;

&lt;pre class="highlight shell"&gt;&lt;code&gt;  &lt;span class="o"&gt;[&lt;/span&gt;init]
    templatedir &lt;span class="o"&gt;=&lt;/span&gt; ~/.git-templates
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vous devez maintenant créer votre fichier de hook.&lt;/p&gt;

&lt;pre class="highlight shell"&gt;&lt;code&gt;  &lt;span class="nv"&gt;$ &lt;/span&gt;vim .git-templates/hooks/post-commit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Collez-y les lignes suivantes :&lt;/p&gt;

&lt;pre class="highlight ruby"&gt;&lt;code&gt;  &lt;span class="c1"&gt;#!/usr/bin/env ruby&lt;/span&gt;
  &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"~/.gitshots/&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;Time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;now&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;to_i&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.jpg"&lt;/span&gt;
  &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Taking capture into &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;!"&lt;/span&gt;
  &lt;span class="nb"&gt;system&lt;/span&gt; &lt;span class="s2"&gt;"imagesnap -q -w 3 &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
  &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Pour que votre Hook s’applique à vos anciens projets, n’oubliez pas de faire un &lt;code&gt;git init&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id="timelapse-vido"&gt;Timelapse vidéo&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://www.dayofthenewdan.com/projects/tlassemble/"&gt;tlassemble&lt;/a&gt; est un utilitaire qui permet de mettre des images les une à la suite des autres pour réaliser une vidéo.&lt;/p&gt;

&lt;pre class="highlight shell"&gt;&lt;code&gt;  &lt;span class="nv"&gt;$ &lt;/span&gt;brew install tlassemble
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Pour créer notre timelapse video vous devez spécifier le dossier d’origine et le fichier de sortie.&lt;/p&gt;

&lt;pre class="highlight shell"&gt;&lt;code&gt;  &lt;span class="nv"&gt;$ &lt;/span&gt;tlassemble .gitshots time_lapse.mov
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Et voila !&lt;/p&gt;

&lt;p&gt;Abonnez-vous à ma newsletter pour voir le timelapse des &lt;strong&gt;1 an de commit&lt;/strong&gt;. En tant que consultant front-end je suis curieux de voir en image les différents endroits d’où je travaille.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Configurer les valeurs par défaut de Node.js</title>
    <link rel="alternate" href="http://davidl.fr/blog/npm-init-config.html"/>
    <id>http://davidl.fr/blog/npm-init-config.html</id>
    <published>2016-03-29T00:00:00+02:00</published>
    <updated>2016-03-29T11:45:02+02:00</updated>
    <author>
      <name>davidl • design &amp; développement</name>
    </author>
    <content type="html">&lt;p&gt;Je viens d’installer une nouvelle machine et en parcourant la documentation de &lt;a href="https://docs.npmjs.com/cli/init"&gt;npm init&lt;/a&gt; j’ai remarqué que l’on pouvait &lt;strong&gt;utiliser des valeurs par défaut pour les nouveaux projets&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Je voulais simplement partager la configuration avec ceux qui ne l’ont pas encore fait et conserver une référence pour moi même :&lt;/p&gt;

&lt;pre class="highlight shell"&gt;&lt;code&gt;  &lt;span class="nv"&gt;$ &lt;/span&gt;npm config &lt;span class="nb"&gt;set &lt;/span&gt;init.author.name &lt;span class="s2"&gt;"David Leuliette"&lt;/span&gt;
  &lt;span class="nv"&gt;$ &lt;/span&gt;npm config &lt;span class="nb"&gt;set &lt;/span&gt;init.author.email dleuliette@gmail.com
  &lt;span class="nv"&gt;$ &lt;/span&gt;npm config &lt;span class="nb"&gt;set &lt;/span&gt;init.author.url http://davidl.fr
  &lt;span class="nv"&gt;$ &lt;/span&gt;npm config &lt;span class="nb"&gt;set &lt;/span&gt;init.license MIT
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;La prochaine fois que vous utiliserez &lt;code&gt;npm init&lt;/code&gt; ces valeurs seront déjà par défaut. Un &lt;strong&gt;gain de temps considérable&lt;/strong&gt; !&lt;/p&gt;

&lt;h2 id="encore-une-petite-chose"&gt;Encore une petite chose&lt;/h2&gt;

&lt;p&gt;Si vous souhaitez en savoir plus sur votre configuration &lt;code&gt;npm config list&lt;/code&gt; vous affichera des informations utiles. Si vous souhaitez aller plus loin vous pourvez lire les pages du manuel avec &lt;code&gt;npm help config&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Bonne lecture !&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Gagne ta place Early-bird pour la prochaine takeoffconf</title>
    <link rel="alternate" href="http://davidl.fr/blog/takeoffconf-code-promo.html"/>
    <id>http://davidl.fr/blog/takeoffconf-code-promo.html</id>
    <published>2016-03-25T00:00:00+01:00</published>
    <updated>2016-03-31T14:53:50+02:00</updated>
    <author>
      <name>davidl • design &amp; développement</name>
    </author>
    <content type="html">&lt;p&gt;Ajourd’hui c’est un bonne journée pour plusieurs raisons : c’est vendredi et en tant que leader de communauté tech dans le nord de la France, j’ai eu la chance d’avoir des billets pour la prochaine grande conférence à ne manquer sous aucun prétexte : &lt;a href="http://takeoffconf.com/"&gt;Takeoffconf&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Code promo takeoffconf" src="https://c2.staticflickr.com/2/1536/25936271932_433d27b0c3_b.jpg" /&gt;&lt;/p&gt;

&lt;h2 id="pourquoi-aller--cette-confrence-"&gt;Pourquoi aller à cette conférence ?&lt;/h2&gt;

&lt;p&gt;Le programme n’est pas définitif mais voici pourquoi vous devez venir :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;En octobre il n’y a rien à faire d’autre&lt;/li&gt;
  &lt;li&gt;Cette année c'est 3 jours qui sont prévus ! (Du Jeudi 06 octobre au Samedi 08 Octobre 2016)&lt;/li&gt;
  &lt;li&gt;La soirée sur la Gare Saint Sauveur est top !&lt;/li&gt;
  &lt;li&gt;Vous &lt;strong&gt;pourrez me voir en 3D&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Vous rencontrerez &lt;a href="https://twitter.com/takeoffconf/status/429257447866662912"&gt;pleins développeurs du futur&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Au tarif &lt;strong&gt;early-bird la place n’est pas chère&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Qui a besoin d’un programme avec une baseline comme “&lt;em&gt;Les sujets qui feront l’actualité des devs en 2017&lt;/em&gt; ”&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="cest-par-o-la-glissade-"&gt;C’est par où la glissade ?&lt;/h2&gt;

&lt;p&gt;Comme chaque année cela se passe dans l’un des plus gros incubateur de France, à Euratechnologies.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Réserver votre place au takeoffconf avec David Leuliette" src="https://c2.staticflickr.com/6/5012/5455442855_2062c40e12_b.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Euratechnologies&lt;/strong&gt;
165 Avenue de Bretagne
59000 Lille, France&lt;/p&gt;

&lt;h2 id="comment-participer-au-concours-"&gt;Comment participer au concours ?&lt;/h2&gt;

&lt;p&gt;C’est facile ! Tout se passe sur Twitter&lt;/p&gt;

&lt;p&gt;Vous devez mentionner &lt;a href="https://twitter.com/TakeOffConf"&gt;@takeoffconf&lt;/a&gt; et &lt;a href="https://twitter.com/_flexbox"&gt;@_flexbox&lt;/a&gt; et dire pourquoi vous souhaitez venir à cette super conférence. Comme je sais que certains ont la puissance de la flème j’ai même préparé un tweet en avance :&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;En Octobre je participe @takeoffconf grâce à @_flexbox qui sera parmi nous ?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Seulement les 8 premiers pourront bénéficier d’un tarif préférenciel alors battez-vous :P&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>3 astuces pour un webdesign mobile first évolutif</title>
    <link rel="alternate" href="http://davidl.fr/blog/mobile-first-webdesign.html"/>
    <id>http://davidl.fr/blog/mobile-first-webdesign.html</id>
    <published>2016-03-10T00:00:00+01:00</published>
    <updated>2016-03-15T17:59:47+01:00</updated>
    <author>
      <name>davidl • design &amp; développement</name>
    </author>
    <content type="html">&lt;p&gt;C’est officiel &lt;a href="http://www.journaldunet.com/media/publishers/1173852-les-francais-sont-mobile-first/"&gt;le mobile est le premier accès à internet&lt;/a&gt; des français. Depuis plusieurs années je suis convaincu de l’approche “mobile-fist”. Faire grandir un projet est plus facile que de &lt;a href="http://blog.impala-webstudio.fr/responsive-design-ou-comment-faire-entrer-une-girafe-dans-une-twingo-en-trois-temps"&gt;rentrer une girafe dans une twingo&lt;/a&gt;.
Un code organisé simplement est plus facile à maintenir, s’analyse plus rapidement par les moteurs de recherche, nous force à &lt;strong&gt;prendre des décisions difficiles sur le contenu au début&lt;/strong&gt;, et nous encourage à conserver l’essentiel.&lt;/p&gt;

&lt;p&gt;&lt;img alt="David Leuliette mobile first" src="https://c2.staticflickr.com/2/1682/25809105455_9af84255e1_b.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;Dans la vraie vie, &lt;strong&gt;personne ne veut faire de mobile-first&lt;/strong&gt;. Les clients continuent à vouloir des &lt;a href="/blog/fin-psd.html"&gt;maquettes grand écran sur Photoshop&lt;/a&gt;, et il est plus difficile de vendre une petite version d’un grand projet. Cependant — pour votre santé mentale — il existe des méthodes de codage pour vous faciliter la vie, même si le design mobile vient dans un second temps.&lt;/p&gt;

&lt;h2 id="rinitialiser-les-valeurs-pour-un-design-optimis-mobile"&gt;Réinitialiser les valeurs pour un design optimisé mobile&lt;/h2&gt;

&lt;p&gt;Réinitialiser les propriétés CSS est souvent &lt;strong&gt;la chose la plus chronophage&lt;/strong&gt; dans la conception d’un site internet responsive. Si la version grand écran d’un composant est plus complexe que la version mobile, il aura plus de code CSS à réinitialiser. C’est pourquoi il existe des &lt;a href="https://github.com/necolas/normalize.css"&gt;solutions pour unifier le design&lt;/a&gt; sur des bases stables.&lt;/p&gt;

&lt;p&gt;N’oubliez pas que la taille de base est du texte est de &lt;a href="http://uxcellence.com/2014/01/15/quick-fix-increase-font-size-to-16px-to-fix-input-zoom/"&gt;16px pour éviter le bug du zoom&lt;/a&gt; sur les &lt;code&gt;inputs&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Global font-size increased from 14px to 16px.&lt;/p&gt;

  &lt;p&gt;&lt;cite&gt;Bootstrap migration guide from v3.x to v4.x&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id="utiliser-les-media-queries-dans-une-logique-volutive-et-non-destructrice"&gt;Utiliser les &lt;code&gt;media queries&lt;/code&gt; dans une logique évolutive et non destructrice.&lt;/h2&gt;

&lt;p&gt;Commencez avec le CSS pour les petits écrans, puis ajoutez de la compléxité pour les écrans plus larges. Les sélecteurs CSS en fin de fichiers écrasent les déclarations précédentes. Codez vos styles pour le mobile en premier et utilisez les &lt;code&gt;media queries&lt;/code&gt; au besoin.&lt;/p&gt;

&lt;pre class="highlight sass"&gt;&lt;code&gt;  &lt;span class="cm"&gt;/* Default to a small-friendly size by not using media queries … */
&lt;/span&gt;  &lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;18px&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;
  &lt;span class="err"&gt;}&lt;/span&gt;

  &lt;span class="cm"&gt;/* … then override it for larger screens. */
&lt;/span&gt;  &lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="nf"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;min-size&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;640px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt; &lt;span class="err"&gt;…&lt;/span&gt; &lt;span class="err"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="nf"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;min-size&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1000px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt; &lt;span class="err"&gt;…&lt;/span&gt; &lt;span class="err"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="nf"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;min-size&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1200px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt; &lt;span class="err"&gt;…&lt;/span&gt; &lt;span class="err"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="forcez-vous--tre-concentr-sur-des-composants"&gt;Forcez vous à être concentré sur des composants&lt;/h2&gt;

&lt;p&gt;Heureusement, la conception mobile-first fonctionne à merveille avec cette technique. Au lieu de vous concentrer sur une grande mise en page, décomposez et soignez les petites parties. Repérez chaque composant &lt;code&gt;header&lt;/code&gt;, &lt;code&gt;navigation&lt;/code&gt; , &lt;code&gt;hero banner&lt;/code&gt; … dans un contexte de petit écran. Est-ce qu’il vit correctement tout seul ? Si ce n’est pas le cas, comment pouvons-nous l’améliorer?&lt;/p&gt;

&lt;p&gt;Coder en conservant un état d’esprit mobile-first demande un certain temps pour s’y habituer, mais je pense qu’à la fin vos feuilles de styles seront plus simples à produire et à maintenir. Cela nous force à poser des questions difficiles dès le début — et pas la veille d’une deadline.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Helper pour les images SVG avec Ruby on Rails (ou Middleman)</title>
    <link rel="alternate" href="http://davidl.fr/blog/svg-helper-ruby.html"/>
    <id>http://davidl.fr/blog/svg-helper-ruby.html</id>
    <published>2016-03-04T00:00:00+01:00</published>
    <updated>2016-03-09T14:05:16+01:00</updated>
    <author>
      <name>davidl • design &amp; développement</name>
    </author>
    <content type="html">&lt;p&gt;J’utilise de plus en plus des images SVG sur mes projets web. Il y a 2 principaux avantages à utiliser ce type d’images :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;les Scalable Vector Graphics (en français &lt;a href="https://fr.wikipedia.org/wiki/Scalable_Vector_Graphics"&gt;“graphique vectoriel adaptable”&lt;/a&gt;), sont par définition &lt;strong&gt;compatible avec les écrans HD&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Ce sont des fichiers textes qui sont intégrés directement dans le HTML, vous &lt;strong&gt;gagnez en performance&lt;/strong&gt; puisqu’il n’y a pas de requête http supplémentaire.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Le principal problème est que cela “&lt;em&gt;pollue&lt;/em&gt;” nos &lt;code&gt;partials&lt;/code&gt;. Dans un contexte d’&lt;strong&gt;application Ruby on Rails ou Middleman&lt;/strong&gt;, un simple appel avec une ligne &lt;code&gt;image_tag&lt;/code&gt; se transforme en centaines de lignes avec des &lt;code&gt;glyph unicode&lt;/code&gt; suivies de coordonnées.&lt;/p&gt;

&lt;p&gt;Voici 2 solutions pour résoudre ce problème.&lt;/p&gt;

&lt;h2 id="mthode-1--quickndirty"&gt;Méthode 1 : Quick’n’dirty&lt;/h2&gt;

&lt;p&gt;Les SVG sont des fichiers textes basés sur du &lt;code&gt;.xml&lt;/code&gt;, nous pouvons les inclures dans nos fichiers &lt;code&gt;.html&lt;/code&gt;. Dans notre application Rails ou Middleman &lt;strong&gt;le hack est d’inclure&lt;/strong&gt; des &lt;code&gt;partials&lt;/code&gt; ou vues qui contiennent notre image.&lt;/p&gt;

&lt;p&gt;Pour faire ceci, commencez par &lt;a href="/toolkit.html"&gt;renommer tous votres fichiers SVG&lt;/a&gt; en prefixant par un underscore et en ajoutant l’extention de votre langage de template.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Exemple&lt;/em&gt; : &lt;code&gt;logo.svg&lt;/code&gt; se transforme en &lt;code&gt;_logo.html.erb&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Ensuite nous devons le ranger au bon endroit.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Avec Rails &lt;code&gt;app/views/svg/_logo.html.erb&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Avec Middleman &lt;code&gt;source/svg/_logo.html.erb&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ensuite, vous pouvez ajouter une image simplement avec un &lt;code&gt;partial&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ruby on Rails&lt;/strong&gt;&lt;/p&gt;

&lt;pre class="highlight ruby"&gt;&lt;code&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sx"&gt;%= render :partial =&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'svg/logo'&lt;/span&gt; &lt;span class="o"&gt;%&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Middleman&lt;/strong&gt;&lt;/p&gt;

&lt;pre class="highlight ruby"&gt;&lt;code&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sx"&gt;%= partial 'svg/logo' %&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Boom ! sh$t done !&lt;/p&gt;

&lt;h2 id="mthode-2--rendu-dynamique"&gt;Méthode 2 : Rendu dynamique&lt;/h2&gt;

&lt;p&gt;La première solution fonctionne, mais ce n’est pas propre et comme je l’ai précisé : c’est un hack. Les images ne respectent plus l’architecture &lt;code&gt;app/assets/images&lt;/code&gt; (Rails) ou &lt;code&gt;source/images&lt;/code&gt; (Middleman). De plus nous devons renommer toutes les images. Ça ne change pas le comportement, mais ma santé mentale n’apprécie pas trop.&lt;/p&gt;

&lt;p&gt;Il existe une &lt;strong&gt;méthode plus intelligente&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Au lieu d’utiliser un &lt;code&gt;partial&lt;/code&gt;, il serait beaucoup plus judicieux d’&lt;a href="https://coderwall.com/p/uip7xg/ruby-on-rails-image-helper-for-retina-display-with-foundation-interchange"&gt;utiliser un helper&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ruby on Rails&lt;/strong&gt;&lt;/p&gt;

&lt;pre class="highlight ruby"&gt;&lt;code&gt;  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;svg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;file_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;Rails&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;root&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/app/assets/images/&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.svg"&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file_path&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;html_safe&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;exists?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="s1"&gt;'(not found)'&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Middleman&lt;/strong&gt;&lt;/p&gt;

&lt;pre class="highlight ruby"&gt;&lt;code&gt;  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;svg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;root&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Middleman&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Application&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;root&lt;/span&gt;
    &lt;span class="n"&gt;file_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/source/images/&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.svg"&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;exists?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="s1"&gt;'(not found)'&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Le &lt;strong&gt;helper&lt;/strong&gt; cherche le chemin de l’image, dès qu’il le trouve il retourne le résultat au format texte. Pour éviter les erreurs on affiche &lt;code&gt;(not found)&lt;/code&gt; au lieu de provoquer une erreur.&lt;/p&gt;

&lt;p&gt;Pour afficher une image c’est aussi simple que cela :&lt;/p&gt;

&lt;pre class="highlight ruby"&gt;&lt;code&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sx"&gt;%= svg 'logo' %&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="chargement-plus-rapide"&gt;Chargement plus rapide&lt;/h2&gt;

&lt;p&gt;Pour aller plus loin vous pouvez ajouter une stratégie de cache afin d’&lt;strong&gt;améliorer la performance&lt;/strong&gt;, il est facile de mettre en place le &lt;a href="http://guides.rubyonrails.org/caching_with_rails.html"&gt;fragment caching de Rails&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rails&lt;/strong&gt;&lt;/p&gt;

&lt;pre class="highlight ruby"&gt;&lt;code&gt;  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;svg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;file_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;Rails&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;root&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/app/assets/images/&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.svg"&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;exists?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;cache&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file_path&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;html_safe&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
      &lt;span class="s1"&gt;'(not found)'&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Je ne suis pas sur du comportement mais je pense qu’après chaque deploy en production vous devrez faire un &lt;code&gt;Rails.cache.clear&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id="attention"&gt;⚠ Attention&lt;/h2&gt;

&lt;p&gt;Prenez garde, dans certains cas utiliser des SVG ralenti votre page comparé à des images &lt;code&gt;.png&lt;/code&gt;. Je n’ai personellement pas de chiffres à proposer mais GitHub a publié quelques données suite à leur &lt;a href="https://github.com/blog/2112-delivering-octicons-with-svg"&gt;abandon des font icon pour des images SVG&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Benchmark performance images SVG" src="https://cloud.githubusercontent.com/assets/54012/13176951/eedb1330-d6e3-11e5-8dfb-99932ff7ee25.png" /&gt;
&lt;em&gt;Benchmark avant / après l’utilisation de SVG&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;N’utilisez jamais des images SVG pour des images complexes. Dans cet exemple les dégradés, ombres portées, … alourdissent l’image.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Choix pour une image svg" src="https://c2.staticflickr.com/2/1564/25190117159_c0af1228d7_b.jpg" /&gt;
&lt;em&gt;Comparaison des types d’images&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ressources&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Logos sous &lt;a href="http://www.logodust.com/"&gt;Creative Commons&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Render &lt;a href="http://cobwwweb.com/render-inline-svg-rails-middleman#boost-performance-with-fragment-caching"&gt;inline SVG&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
</feed>
